name: Full CI/CD
on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version to release (i.e.: 1.2.0)'
        required: true
      next_version:
        description: 'Next development cycle version (i.e.: 1.3.0-SNAPSHOT)'
        required: true

jobs:
  build:
    name: Build on Commit
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        sonarqube: [ 8.9.0.43852 ]
        # sonarqube: [ 8.9.0.43852, 8.8.0.42792 ] # TODO: Move back to matrix when LTS != LATEST

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set Release Version ${{ github.event.inputs.release_version }}
        if: github.event_name == 'workflow_dispatch' && matrix.os == 'ubuntu-latest' && matrix.sonarqube == '8.9.0.43852'
        run: mvn -B versions:set -DnewVersion=${{ github.event.inputs.release_version }} -DgenerateBackupPoms=false

      - name: Build and Test against SonarQube ${{ matrix.sonarqube }}
        run: mvn -B clean verify -Pits -"Dsonar.runtimeVersion=${{ matrix.sonarqube }}"

      - name: Run SonarQube Analysis
        if: contains(github.ref, 'master') && matrix.os == 'ubuntu-latest' && matrix.sonarqube == '8.9.0.43852'
        run: mvn -B sonar:sonar -Dsonar.login=${{ secrets.SONARQUBE_SCANNER_FOR_PRIVATE_REPOSITORIES_TOKEN }}

      - name: Upload Plugin JAR
        if: matrix.os == 'ubuntu-latest' && matrix.sonarqube == '8.9.0.43852'
        uses: actions/upload-artifact@v2
        with:
          name: plugin
          path: |
            sonar-vhdlrc-plugin/target/sonar-vhdlrc-plugin-*.jar
            !sonar-vhdlrc-plugin/target/sonar-vhdlrc-plugin-*-sources.jar

      - name: Build plugin with Linty compatibility
        if: contains(github.ref, 'master') && matrix.os == 'ubuntu-latest' && matrix.sonarqube == '8.9.0.43852'
        run: mvn -B clean package -DwithoutVhdlLanguageSupport

      - name: Upload Plugin JAR with Linty compatibility
        if: contains(github.ref, 'master') && matrix.os == 'ubuntu-latest' && matrix.sonarqube == '8.9.0.43852'
        uses: actions/upload-artifact@v2
        with:
          name: plugin-with-linty-compatibility
          path: |
            sonar-vhdlrc-plugin/target/sonar-vhdlrc-plugin-*.jar
            !sonar-vhdlrc-plugin/target/sonar-vhdlrc-plugin-*-sources.jar

      - name: Commit, Push and Tag Release Version ${{ github.event.inputs.release_version }}
        if: github.event_name == 'workflow_dispatch' && matrix.os == 'ubuntu-latest' && matrix.sonarqube == '8.9.0.43852'
        uses: EndBug/add-and-commit@v5
        with:
          add: '*'
          author_name: GitHub Actions
          author_email: github-actions@linty-services.com
          message: Release version ${{ github.event.inputs.release_version }}
          tag: ${{ github.event.inputs.release_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Next Development Cycle Version ${{ github.event.inputs.next_version }}
        if: github.event_name == 'workflow_dispatch' && matrix.os == 'ubuntu-latest' && matrix.sonarqube == '8.9.0.43852'
        run: mvn -B versions:set -DnewVersion=${{ github.event.inputs.next_version }} -DgenerateBackupPoms=false

      - name: Commit and Push Next Development Cycle Version ${{ github.event.inputs.next_version }}
        if: github.event_name == 'workflow_dispatch' && matrix.os == 'ubuntu-latest' && matrix.sonarqube == '8.9.0.43852'
        uses: EndBug/add-and-commit@v5
        with:
          add: '*'
          author_name: GitHub Actions
          author_email: github-actions@linty-services.com
          message: Bump version to ${{ github.event.inputs.next_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pre-release:
    name: GitHub Pre-release
    runs-on: ubuntu-latest
    needs: build
    if: contains(github.ref, 'master')
    steps:
      - name: Download Plugin JAR
        uses: actions/download-artifact@v2
        with:
          name: plugin
      - name: Rename JAR into latest
        run: mv sonar-vhdlrc-plugin-*.jar sonar-vhdlrc-plugin-latest.jar

      - name: Download Plugin JAR with Linty compatibility
        uses: actions/download-artifact@v2
        with:
          name: plugin-with-linty-compatibility
      - name: Rename JAR into latest
        run: mv sonar-vhdlrc-plugin-*-SNAPSHOT.jar sonar-vhdlrc-plugin-with-linty-compatibility-latest.jar

      - name: "GitHub Pre-release: latest"
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: Latest build from master
          files: |
            sonar-vhdlrc-plugin-latest.jar
            sonar-vhdlrc-plugin-with-linty-compatibility-latest.jar

  release:
    name: GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Download Plugin JAR with Linty compatibility
        uses: actions/download-artifact@v2
        with:
          name: plugin-with-linty-compatibility
      - name: Rename JAR with Linty compatibility
        run: mv sonar-vhdlrc-plugin-*.jar sonar-vhdlrc-plugin-with-linty-compatibility-${{ github.event.inputs.release_version }}.jar
      - name: Download Plugin JAR
        uses: actions/download-artifact@v2
        with:
          name: plugin
      - name: "GitHub Release: ${{ github.event.inputs.release_version }}"
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ github.event.inputs.release_version }}
          prerelease: false
          title: ${{ github.event.inputs.release_version }}
          files: sonar-vhdlrc-plugin-*.jar
